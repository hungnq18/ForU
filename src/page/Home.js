import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router';
import applauseSound from '../audio/applause.mp3';
import clickSound from '../audio/click.mp3'; // √Çm thanh nh·∫•n n√∫t
import explosionSound from '../audio/explosion.mp3'; // √Çm thanh n·ªï tung
import '../css/airplane.css';
import airplanePilotImage from '../img/airplane_pilot.png'; // ·∫¢nh phi c√¥ng ng·ªìi tr√™n m√°y bay

function Airplane() {
  const [energy, setEnergy] = useState(0);
  const [airplanePosition, setAirplanePosition] = useState(0);
  const [airplaneFlyUp, setAirplaneFlyUp] = useState(false);
  const [note, setNote] = useState('');
  const [showHelpMessage, setShowHelpMessage] = useState(false);
  const [showExplosion, setShowExplosion] = useState(false);
  const [showCongratulatoryMessage, setShowCongratulatoryMessage] = useState(false);
  const navigate = useNavigate();
  const phrases = [
    "‚ù§Ô∏è C·ªë l√™n! B·∫°n ƒëang gi√∫p t√¥i r·∫•t nhi·ªÅu!",
    "üöÄ M√°y bay chu·∫©n b·ªã c·∫•t c√°nh!",
    "üåü C·∫£m ∆°n b·∫°n, phi c√¥ng r·∫•t vui!",
    "üí™ B·∫°n l√† ng∆∞·ªùi h√πng c·ªßa t√¥i!",
    "‚úàÔ∏è Ch√∫t n·ªØa th√¥i, m√°y bay s·∫Øp bay l√™n tr·ªùi r·ªìi!",
    "M·ªôt ch√∫t n·ªØa th√¥i, c√¥ g√°i xinh ƒë·∫πp!",
    "ƒêi·ªÉm ƒë·∫øn c·ªßa ch√∫ng ta l√† s·ª± h·∫°nh ph√∫c"
  ];

  // Hi·ªÉn th·ªã d√≤ng ch·ªØ "Gi√∫p t√¥i v·ªõi" sau 5 gi√¢y n·∫øu ng∆∞·ªùi ch∆°i kh√¥ng t∆∞∆°ng t√°c
  useEffect(() => {
    const timer = setTimeout(() => {
      setShowHelpMessage(true);
    }, 5000);
    return () => clearTimeout(timer);
  }, []);

  const playSound = (sound) => {
    const audio = new Audio(sound);
    audio.play();
  };

  const handleTakeoff = () => {
    // Ki·ªÉm tra nƒÉng l∆∞·ª£ng ƒë·ªÉ quy·∫øt ƒë·ªãnh c√°ch bay
    if (energy > 99) {
      setAirplaneFlyUp(true);
      playSound(applauseSound); // Ph√°t √¢m thanh v·ªó tay
      setShowCongratulatoryMessage(true); // Hi·ªÉn th·ªã th√¥ng ƒëi·ªáp ch√∫c m·ª´ng

      setTimeout(() => {
        alert('C·∫•t c√°nh th√†nh c√¥ng!');
        navigate('/success'); // Chuy·ªÉn h∆∞·ªõng sang trang th√†nh c√¥ng
      }, 2000);
    } else {
      // Khi nƒÉng l∆∞·ª£ng d∆∞·ªõi 60%, ph√°t √¢m thanh n·ªï v√† hi·ªÉn th·ªã th√¥ng ƒëi·ªáp
      setShowExplosion(true);
      playSound(explosionSound); // Ph√°t √¢m thanh n·ªï tung
      setNote('‚è≥ S·ªëng l√† kh√¥ng v·ªôi n√≠ ∆°i =)))'); // Hi·ªÉn th·ªã th√¥ng ƒëi·ªáp
      setTimeout(() => {
        setShowExplosion(false);
      }, 2000);
    }
  };

  const increaseEnergy = () => {
    setEnergy(prevEnergy => Math.min(prevEnergy + 5, 100)); // TƒÉng 10% nƒÉng l∆∞·ª£ng m·ªói l·∫ßn nh·∫•n n√∫t
    setAirplanePosition(prev => Math.min(prev + 5, 100)); // Di chuy·ªÉn m√°y bay theo ph·∫ßn trƒÉm nƒÉng l∆∞·ª£ng

    // Ch·ªçn m·ªôt c√¢u ng·∫´u nhi√™n t·ª´ danh s√°ch
    const randomPhrase = phrases[Math.floor(Math.random() * phrases.length)];
    setNote(randomPhrase);
    playSound(clickSound); // Ph√°t √¢m thanh nh·∫•n n√∫t

    // N·∫øu nƒÉng l∆∞·ª£ng ƒë·∫°t 100%, m√°y bay s·∫Ω bay l√™n
    if (energy + 10 >= 100) {
      setAirplaneFlyUp(true); // Khi nƒÉng l∆∞·ª£ng ƒë·∫°t 100%, m√°y bay s·∫Ω bay l√™n
      setTimeout(() => {
        alert('M√°y bay ƒë√£ ƒë·∫°t 100%! C·∫•t c√°nh!');
        playSound(applauseSound, 0.7); // Ph√°t √¢m thanh v·ªó tay
        setShowCongratulatoryMessage(true); // Hi·ªÉn th·ªã th√¥ng ƒëi·ªáp ch√∫c m·ª´ng
        navigate('/success'); // Chuy·ªÉn h∆∞·ªõng sang trang th√†nh c√¥ng
      }, 2000);
    }
  };

  const handleNoHelpClick = () => {
    // L·∫•y k√≠ch th∆∞·ªõc c·ªßa c·ª≠a s·ªï
    const windowWidth = window.innerWidth;
    const windowHeight = window.innerHeight;

    // T·∫°o v·ªã tr√≠ ng·∫´u nhi√™n cho n√∫t
    const randomX = Math.random() * (windowWidth - 100);
    const randomY = Math.random() * (windowHeight - 50);

    // C·∫≠p nh·∫≠t v·ªã tr√≠ cho n√∫t kh√¥ng gi√∫p
    const noHelpButton = document.querySelector('.no-help-button');
    noHelpButton.style.position = 'absolute';
    noHelpButton.style.left = `${randomX}px`;
    noHelpButton.style.top = `${randomY}px`;

    playSound(clickSound); // Ph√°t √¢m thanh nh·∫•n n√∫t khi kh√¥ng gi√∫p
  };

  return (
    <div className="airplane-container">
      <h1>B·∫°n h√£y gi√∫p phi c√¥ng n√†y chinh ph·ª•c m√°y bay v√† b·∫ßu tr·ªùi nhaaaa !!!</h1>
      <div className="pilot-gif">
        <a src="../img/airplane.jpg" alt="Cute Pilot" />
      </div>
      <div className="buttons-container">
        <button className="help-button" onClick={increaseEnergy}>Gi√∫p</button>
        <button className="no-help-button" onClick={handleNoHelpClick}>
          Kh√¥ng gi√∫p
        </button>
      </div>
      <button className="takeoff-button" onClick={handleTakeoff}>
        C·∫•t c√°nh
      </button>

      <div className="energy-container">
        <div className="energy-bar" style={{ width: `${energy}%` }} />

        <div
          className={`airplane ${airplaneFlyUp ? 'fly-up' : ''}`} 
          style={{
            left: `${airplanePosition}%`,
            transition: 'left 1s ease',
          }}
        >
          <img src={airplanePilotImage} alt="Airplane with Pilot" className="airplane-icon" />
        </div>
      </div>

      {note && <div className="cute-note">{note}</div>}
      
      {showHelpMessage && !note && (
        <div className="help-message">
          ‚è≥ Gi√∫p t√¥i v·ªõi, phi c√¥ng c·∫ßn b·∫°n!
        </div>
      )}

      {showExplosion && (
        <div className="explosion">
          üí• BOOM! üí•
        </div>
      )}

      {showCongratulatoryMessage && (
        <div className="congratulations">
          üéâ C·∫•t c√°nh th√†nh c√¥ng! üë©‚Äç‚úàÔ∏è‚ù§Ô∏è üéâ
        </div>
      )}
    </div>
  );
}

export default Airplane;
